name: PyCOLMAP build and publish

on:
  push:
    branches:
      - windows-CI
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]
  release:
    types: [ published, edited ]
  workflow_dispatch:

jobs:
  windows-build:
    name: Wrapper Windows Build
    runs-on: windows-latest
    strategy:
      matrix:
        pyversion: [ "python@3.8" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: lukka/get-cmake@latest
      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash
      - name: Restore artifacts, or setup vcpkg for building artifacts
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          # This one is not needed, as it is the default value anyway.
          # vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgJsonGlob: '**/cmakepresets/vcpkg.json'
      - name: List $RUNNER_WORKSPACE before build
        run: find $RUNNER_WORKSPACE
        shell: bash
      - name: Prints output of run-vcpkg's action.
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}' "
      - name: Run CMake+vcpkg+Ninja
        uses: lukka/run-cmake@v10
        id: runcmake
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/cmakepresets/CMakeLists.txt'
          configurePreset: 'ninja-multi-vcpkg'
          buildPreset: 'ninja-multi-vcpkg'
      - name: List $RUNNER_WORKSPACE after build
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Archive wheels
        uses: actions/upload-artifact@v3
        with:
          name: pycolmap-${{ matrix.pyversion }}-windows
          path: .\wheelhouse\pycolmap-*.whl

  pypi-publish:
    name: Publish wheels to PyPI
    needs: [ windows-build ]
    runs-on: ubuntu-latest
    # We publish the wheel to pypi when a new tag is pushed,
    # either by creating a new GitHub release or explictly with `git tag`
    if: ${{ github.event_name == 'release' || startsWith(github.ref, 'refs/tags') }}
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts/
      - name: Move wheels
        run: mkdir ./wheelhouse && mv ./artifacts/**/*.whl ./wheelhouse/
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip_existing: true
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: ./wheelhouse/
